/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.traductorclavem;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.Scanner;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.text.Normalizer;


/**
 *
 * @author yoc91
 */
public class Traductor extends javax.swing.JFrame {
    
 
//---Menu de opciones-----
        JFileChooser seleccionar = new JFileChooser();
        File archivo;
        FileInputStream entrada;
        FileOutputStream salida;
        
     //--------------------------------Copiar, pegar, cortar, buscar y reemplazar
        
    //Traductor-----------    ----------------------
    Scanner c = new Scanner(System.in);
    //Atruibuto
    private int area;    
        
    char[] datoprim = new char[10];
    char[] datopr, convers;
    String AB;

    
    public String introduzcaPalabra(){
    String palabra1 = jTextArea_Ingreso.getText();
    
    palabra1 = c.nextLine().toUpperCase().trim();
    
    return palabra1;
    }    
    
    public void convertirPalabra(){
    area = AB.length();
    datopr = AB.toCharArray();
    convers = new char[area];
    
    for(int i = 0; i<area;i++){
    if(datopr[i] == 'M'){
    convers[i] = datoprim[0];
    } else if(datopr [i] == 'U'){
        convers[i] = datoprim[1];
    } else if(datopr [i] == 'R'){
        convers[i] = datoprim[2];
    } else if(datopr [i] == 'C'){
        convers[i] = datoprim[3];
    } else if(datopr [i] == 'I'){
        convers[i] = datoprim[4];
    } else if(datopr [i] == 'E'){
        convers[i] = datoprim[5];
    } else if(datopr [i] == 'L'){
        convers[i] = datoprim[6];
    } else if(datopr [i] == 'A'){
        convers[i] = datoprim[7];
    } else if(datopr [i] == 'G'){
        convers[i] = datoprim[8];
    } else if(datopr [i] == 'O'){
        convers[i] = datoprim[9];
    } else{
        convers[i] = datopr[i];
    }
    
    } //Fin ciclo For
        
    }  


public void traductor(){
    for (int i=0;i<area;i++){
        System.out.println(convers[i] + "");
    }
    }



    
    public String AbrirArchivo (File archivo){
        String documento="";
        try{
            entrada = new FileInputStream(archivo);
            int ascci;
            while((ascci=entrada.read())!=-1) {
            char caracter=(char)ascci;
            documento+=caracter;
            }
        }catch (Exception e){
        }
        return documento;
    }    
    
    public String GuardarArchivo (File archivo, String documento){
    String mensaje=null;
        try {
            salida =new FileOutputStream(archivo);
            byte[] bytxt=documento.getBytes();
            salida.write(bytxt);
            mensaje="archivo Guardado";
        } catch (Exception e) {
        }
            return mensaje;
    }
    /**
     * Creates new form Traductor
     */
    public Traductor() {
        initComponents();
        this.setLocationRelativeTo(null);
        jTextArea_Ingreso.copy();
        jTextArea_Ingreso.cut();
        jTextArea_Ingreso.paste();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel_titulo2 = new javax.swing.JLabel();
        jLabel_texto1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea_Ingreso = new javax.swing.JTextArea();
        btn_Procesar = new javax.swing.JButton();
        txt_longitud = new javax.swing.JLabel();
        txt_totalP = new javax.swing.JLabel();
        txt_primeraL = new javax.swing.JLabel();
        txt_ultimaL = new javax.swing.JLabel();
        txt_Lcentral = new javax.swing.JLabel();
        txt_primeraP = new javax.swing.JLabel();
        txt_palabraC = new javax.swing.JLabel();
        txt_ultimaP = new javax.swing.JLabel();
        lbl_longitud = new javax.swing.JTextField();
        lbl_totalP = new javax.swing.JTextField();
        lbl_primeraL = new javax.swing.JTextField();
        lbl_ultimaL = new javax.swing.JTextField();
        lbl_Lcentral = new javax.swing.JTextField();
        lbl_primeraP = new javax.swing.JTextField();
        lbl_palabraC = new javax.swing.JTextField();
        lbl_ultimaP = new javax.swing.JTextField();
        lbl_repeticionesE = new javax.swing.JTextField();
        txt_repeticionesA = new javax.swing.JLabel();
        lbl_repeticionesI = new javax.swing.JTextField();
        txt_repeticionesE = new javax.swing.JLabel();
        lbl_repeticionesO = new javax.swing.JTextField();
        txt_repeticionesI = new javax.swing.JLabel();
        lbl_repeticionesU = new javax.swing.JTextField();
        txt_repeticionesO = new javax.swing.JLabel();
        lbl_palabrasPar = new javax.swing.JTextField();
        txt_repeticionesU = new javax.swing.JLabel();
        lbl_palabrasImpar = new javax.swing.JTextField();
        txt_palabrasPar = new javax.swing.JLabel();
        lbl_repeticionesA = new javax.swing.JTextField();
        txt_palabrasImpar = new javax.swing.JLabel();
        txt_traduccion = new javax.swing.JLabel();
        jTextField_traductor = new javax.swing.JTextField();
        jMenuBar_1 = new javax.swing.JMenuBar();
        jMenu_Archivo = new javax.swing.JMenu();
        jMenuItem_abrir = new javax.swing.JMenuItem();
        jMenuItem_Guardar = new javax.swing.JMenuItem();
        jMenuItem_GuardarC = new javax.swing.JMenuItem();
        jMenu_Editar = new javax.swing.JMenu();
        jMenuItem_copiar = new javax.swing.JMenuItem();
        jMenuItem_cortar = new javax.swing.JMenuItem();
        jMenuItem_pegar = new javax.swing.JMenuItem();
        jMenuItem_buscar = new javax.swing.JMenuItem();
        jMenuItem_reemplazar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 51));

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 255));
        jDesktopPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 0)));
        jDesktopPane1.setForeground(new java.awt.Color(0, 102, 102));

        jLabel_titulo2.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 36)); // NOI18N
        jLabel_titulo2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel_titulo2.setText("Manejo de cadenas");

        jLabel_texto1.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        jLabel_texto1.setText("Ingrese un texto o abra un archivo");

        jTextArea_Ingreso.setColumns(20);
        jTextArea_Ingreso.setLineWrap(true);
        jTextArea_Ingreso.setRows(5);
        jTextArea_Ingreso.setWrapStyleWord(true);
        jScrollPane4.setViewportView(jTextArea_Ingreso);

        btn_Procesar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Procesar.setText("Procesar");
        btn_Procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ProcesarActionPerformed(evt);
            }
        });

        txt_longitud.setForeground(new java.awt.Color(0, 0, 51));
        txt_longitud.setText("Longitud del texto..... :");

        txt_totalP.setForeground(new java.awt.Color(0, 0, 51));
        txt_totalP.setText("Total de palabras....... :");

        txt_primeraL.setForeground(new java.awt.Color(0, 0, 51));
        txt_primeraL.setText("Primera letra del texto..:");

        txt_ultimaL.setForeground(new java.awt.Color(0, 0, 51));
        txt_ultimaL.setText("Última letra del texto... :");

        txt_Lcentral.setForeground(new java.awt.Color(0, 0, 51));
        txt_Lcentral.setText("Letra central del texto. :");

        txt_primeraP.setForeground(new java.awt.Color(0, 0, 51));
        txt_primeraP.setText("Primera palabra......... :");

        txt_palabraC.setForeground(new java.awt.Color(0, 0, 51));
        txt_palabraC.setText("Palabra Central......... :");

        txt_ultimaP.setForeground(new java.awt.Color(0, 0, 51));
        txt_ultimaP.setText("Última palabra...........:");

        lbl_totalP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_totalPActionPerformed(evt);
            }
        });

        lbl_repeticionesE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_repeticionesEActionPerformed(evt);
            }
        });

        txt_repeticionesA.setForeground(new java.awt.Color(0, 0, 51));
        txt_repeticionesA.setText("Repeticiones de \"A\", \"a\" ó \"á\"..........:");

        txt_repeticionesE.setForeground(new java.awt.Color(0, 0, 51));
        txt_repeticionesE.setText("Repeticiones de \"E\", \"e\" ó \"é\"......... :");

        txt_repeticionesI.setForeground(new java.awt.Color(0, 0, 51));
        txt_repeticionesI.setText("Repeticiones de \"I\", \"i\" ó \"í\"............:");

        txt_repeticionesO.setForeground(new java.awt.Color(0, 0, 51));
        txt_repeticionesO.setText("Repeticiones de \"O\", \"o\" u \"ó\"........ :");

        txt_repeticionesU.setForeground(new java.awt.Color(0, 0, 51));
        txt_repeticionesU.setText("Repeticiones de \"U\", \"u\" ó \"ú\"........ :");

        txt_palabrasPar.setForeground(new java.awt.Color(0, 0, 51));
        txt_palabrasPar.setText("Palabras con cantidad de caracteres par:");

        lbl_repeticionesA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_repeticionesAActionPerformed(evt);
            }
        });

        txt_palabrasImpar.setForeground(new java.awt.Color(0, 0, 51));
        txt_palabrasImpar.setText("Palabras con cantidad de caracteres impar:");

        txt_traduccion.setFont(new java.awt.Font("Franklin Gothic Heavy", 0, 24)); // NOI18N
        txt_traduccion.setForeground(new java.awt.Color(0, 102, 0));
        txt_traduccion.setText("Traduccion a clave murcielago");

        jTextField_traductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_traductorActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jLabel_titulo2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel_texto1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btn_Procesar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_longitud, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_totalP, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_primeraL, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_ultimaL, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_Lcentral, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_primeraP, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_palabraC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_ultimaP, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_longitud, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_totalP, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_primeraL, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_ultimaL, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_Lcentral, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_primeraP, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_palabraC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_ultimaP, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_repeticionesE, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_repeticionesA, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_repeticionesI, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_repeticionesE, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_repeticionesO, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_repeticionesI, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_repeticionesU, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_repeticionesO, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_palabrasPar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_repeticionesU, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_palabrasImpar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_palabrasPar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_repeticionesA, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_palabrasImpar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_traduccion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jTextField_traductor, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_ultimaP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_palabraC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_primeraP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_Lcentral, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_ultimaL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_longitud, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_totalP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_primeraL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_totalP, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(lbl_primeraL)
                            .addComponent(lbl_Lcentral)
                            .addComponent(lbl_ultimaP)
                            .addComponent(lbl_longitud)
                            .addComponent(lbl_primeraP, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(lbl_palabraC)
                            .addComponent(lbl_ultimaL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(txt_palabrasImpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_palabrasImpar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_repeticionesA, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_repeticionesE)
                                    .addComponent(txt_repeticionesI)
                                    .addComponent(txt_repeticionesO)
                                    .addComponent(txt_repeticionesU))
                                .addGap(18, 18, 18)
                                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_repeticionesU)
                                    .addComponent(lbl_repeticionesO)
                                    .addComponent(lbl_repeticionesI)
                                    .addComponent(lbl_repeticionesA)
                                    .addComponent(lbl_repeticionesE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(txt_palabrasPar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_palabrasPar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addContainerGap())
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_traduccion)
                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField_traductor, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel_texto1)))
                        .addGap(0, 24, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(btn_Procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(233, 233, 233))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jLabel_titulo2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99))))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_titulo2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Procesar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_longitud)
                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_longitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_repeticionesA)
                        .addComponent(lbl_repeticionesE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_totalP)
                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_totalP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_repeticionesE)
                        .addComponent(lbl_repeticionesA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_primeraL)
                            .addComponent(lbl_primeraL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_ultimaL)
                            .addComponent(lbl_ultimaL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Lcentral)
                            .addComponent(lbl_Lcentral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_primeraP)
                            .addComponent(lbl_primeraP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_palabraC)
                            .addComponent(lbl_palabraC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_ultimaP)
                            .addComponent(lbl_ultimaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_repeticionesI)
                            .addComponent(lbl_repeticionesI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_repeticionesO)
                            .addComponent(lbl_repeticionesO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_repeticionesU)
                            .addComponent(lbl_repeticionesU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_palabrasPar)
                            .addComponent(lbl_palabrasPar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_palabrasImpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_palabrasImpar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_traduccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_traductor, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu_Archivo.setText("Archivo");

        jMenuItem_abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem_abrir.setText("Abrir");
        jMenuItem_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_abrirActionPerformed(evt);
            }
        });
        jMenu_Archivo.add(jMenuItem_abrir);

        jMenuItem_Guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem_Guardar.setText("Guardar");
        jMenuItem_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_GuardarActionPerformed(evt);
            }
        });
        jMenu_Archivo.add(jMenuItem_Guardar);

        jMenuItem_GuardarC.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        jMenuItem_GuardarC.setText("Guardar como");
        jMenuItem_GuardarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_GuardarCActionPerformed(evt);
            }
        });
        jMenu_Archivo.add(jMenuItem_GuardarC);

        jMenuBar_1.add(jMenu_Archivo);

        jMenu_Editar.setText("Editar");

        jMenuItem_copiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem_copiar.setText("Copiar");
        jMenuItem_copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_copiarActionPerformed(evt);
            }
        });
        jMenu_Editar.add(jMenuItem_copiar);

        jMenuItem_cortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem_cortar.setText("Cortar");
        jMenuItem_cortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_cortarActionPerformed(evt);
            }
        });
        jMenu_Editar.add(jMenuItem_cortar);

        jMenuItem_pegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem_pegar.setText("Pegar");
        jMenuItem_pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_pegarActionPerformed(evt);
            }
        });
        jMenu_Editar.add(jMenuItem_pegar);

        jMenuItem_buscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem_buscar.setText("Buscar");
        jMenu_Editar.add(jMenuItem_buscar);

        jMenuItem_reemplazar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem_reemplazar.setText("Reemplazar");
        jMenu_Editar.add(jMenuItem_reemplazar);

        jMenuBar_1.add(jMenu_Editar);

        setJMenuBar(jMenuBar_1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_totalPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_totalPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_totalPActionPerformed

    private void lbl_repeticionesEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_repeticionesEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_repeticionesEActionPerformed

    private void jTextField_traductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_traductorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_traductorActionPerformed

    private void jMenuItem_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_abrirActionPerformed
        // TODO add your handling code here:
        if(seleccionar.showDialog(null, "Abrir")==JFileChooser.APPROVE_OPTION){
        archivo=seleccionar.getSelectedFile();
        if(archivo.canRead()){
            if(archivo.getName().endsWith("txt")){
            String documento=AbrirArchivo(archivo);
            jTextArea_Ingreso.setText(documento);
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no compatible");
            }
        }
        }
    }//GEN-LAST:event_jMenuItem_abrirActionPerformed

    private void jMenuItem_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_GuardarActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItem_GuardarActionPerformed

    private void jMenuItem_GuardarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_GuardarCActionPerformed
        // TODO add your handling code here:
        if(seleccionar.showDialog(null, "Guardar")==JFileChooser.APPROVE_OPTION){
        archivo=seleccionar.getSelectedFile();
        if(archivo.getName().endsWith("txt")){
            String Documento=jTextArea_Ingreso.getText();
            String mensaje=GuardarArchivo(archivo, Documento);
            if(mensaje!=null){
            JOptionPane.showMessageDialog(null, mensaje);
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no compatible");
            }
        } else{
            JOptionPane.showMessageDialog(null, "Guardar documento de texto");
        }
        
        }
    }//GEN-LAST:event_jMenuItem_GuardarCActionPerformed

    private void jMenuItem_cortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_cortarActionPerformed
        // TODO add your handling code here:
        jTextArea_Ingreso.cut();
        
    }//GEN-LAST:event_jMenuItem_cortarActionPerformed

    private void jMenuItem_pegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_pegarActionPerformed
        // TODO add your handling code here:
        jTextArea_Ingreso.copy();
        jTextArea_Ingreso.cut();
        jTextArea_Ingreso.paste();
    }//GEN-LAST:event_jMenuItem_pegarActionPerformed

    private void lbl_repeticionesAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_repeticionesAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_repeticionesAActionPerformed

    private void btn_ProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ProcesarActionPerformed
        // TODO add your handling code here:
        String datoc = jTextArea_Ingreso.getText();
        
        StringTokenizer st = new StringTokenizer(datoc);
        lbl_totalP.setText(""+st.countTokens());
        
        StringTokenizer tokens = new StringTokenizer(datoc);
        String primeraPalabra = tokens.nextToken();
        lbl_primeraP.setText(primeraPalabra);
        
        String letraU = datoc.substring(datoc.length()-1);
        String[] palabraarray = jTextArea_Ingreso.getText().split(" ");
        String[] chararray = datoc.split("");
        int tamaño = 0;
        
        for (int i = 0; i < palabraarray.length; i++){
            tamaño ++;

        }
        
        //StringTokenizer st = new StringTokenizer(palabra);
        lbl_totalP.setText(""+st.countTokens());

        //Esto es para tener la primera palabra del texto ingresado
        //StringTokenizer tokens = new StringTokenizer(palabra);
        //String primeraPalabra = tokens.nextToken();
        lbl_primeraL.setText(primeraPalabra);

        //Esto es para obtener la primera letra del texto ingresado
        char letra1 = datoc.charAt(0);
        lbl_primeraL.setText(""+letra1);

        //Esto es para tener la longitud del texto ingresado(espacios cuentan)
        int stringLength = datoc.length();
        lbl_longitud.setText(""+stringLength);

        //Esto es para obtener la ultima letra del texto ingresado
        char [] letra2 = letraU.toCharArray();
        lbl_ultimaL.setText(""+letra2[letra2.length -1]);

        //esto es para obtener la ultima palabra del texto ingresado
        StringTokenizer ultimaP = new StringTokenizer(datoc, " ");

        String strLastToken = null;

        while( st.hasMoreTokens() ) {

            strLastToken = st.nextToken();
        }

        lbl_ultimaP.setText("" + strLastToken);

        //esto es para tener la letra central del texto
        int centro1 = stringLength/2;
        lbl_Lcentral.setText(chararray[centro1]);

        //esto es para encontrar la palabra central del texto
        int centro2 = tamaño/2;
        lbl_palabraC.setText(palabraarray[centro2]);

        //Esto es para que calcule cuantas palabras par e impar hay en el texto
        String[] valorarray = datoc.split(" ");
        int par=0;
        int impar=0;

        for (int i = 0; i < valorarray.length; i++){
            String parimpar = valorarray[i];
            int contar = parimpar.length();

            if (contar % 2 == 0 ){
                par = par + 1;

            }else {
                impar = impar + 1;
            }

        }
       lbl_palabrasPar.setText(Integer.toString(par));
       lbl_palabrasImpar.setText(Integer.toString(impar));
        
        int contadorA=0;
        int contadorE=0;
        int contadorI=0;
        int contadorO=0;
        int contadorU=0;
        
        for (int x = 0 ; x < datoc.length(); x++){
            if (datoc.charAt(x)== 'E' || datoc.charAt(x)== 'e' || datoc.charAt(x)== 'É' || datoc.charAt(x)== 'é'){
                contadorE++;
            }
        
        }
        
        lbl_repeticionesE.setText(""+contadorE);
        
        for (int x = 0 ; x < datoc.length(); x++){
            if (datoc.charAt(x)== 'A' || datoc.charAt(x)== 'a' || datoc.charAt(x)== 'Á' || datoc.charAt(x)== 'á'){
                contadorA++;
            }
        
        }
        
        lbl_repeticionesA.setText(""+contadorA);
        
        for (int x = 0 ; x < datoc.length(); x++){
            if (datoc.charAt(x)== 'O' || datoc.charAt(x)== 'o' || datoc.charAt(x)== 'Ó' || datoc.charAt(x)== 'ó'){
                contadorO++;
            }
        
        }
        
      lbl_repeticionesO.setText(""+contadorO);
        
        for (int x = 0 ; x < datoc.length(); x++){
            if (datoc.charAt(x)== 'U' || datoc.charAt(x)== 'u' || datoc.charAt(x)== 'Ú' || datoc.charAt(x)== 'ú'){
                contadorU++;
            }
        
        }
        
        lbl_repeticionesU.setText(""+contadorU);
        
        for (int x = 0 ; x < datoc.length(); x++){
            if (datoc.charAt(x)== 'I' || datoc.charAt(x)== 'i' || datoc.charAt(x)== 'Í' || datoc.charAt(x)== 'í'){
                contadorI++;
            }
        
        }
        
        lbl_repeticionesI.setText(""+contadorI);
           
        String cadenaNormalize = Normalizer.normalize(datoc, Normalizer.Form.NFD);
        String valor2 = cadenaNormalize.replaceAll("[^\\p{ASCII}]", "");
        String s= valor2.toLowerCase();

        String avz="a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z";
        String x="7,B,3,D,5,F,8,H,4,J,K,6,0,N,9,P,Q,2,S,T,1,V,W,X,Y,Z";
        String[] abecedario = avz.split(",");
        String[] traductor= x.split(",");

        for(int i=0; i < abecedario.length; i++){
            System.out.println(abecedario[i]);
        }

        for(int i=0; i < traductor.length; i++){
            System.out.println(traductor[i]);
        }

        for (int i = 0; i <26; i++){
            s = s.replace(abecedario[i], traductor[i]);
        }
       jTextField_traductor.setText(s);
    }//GEN-LAST:event_btn_ProcesarActionPerformed

    private void jMenuItem_copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_copiarActionPerformed
        // TODO add your handling code here:
        jTextArea_Ingreso.copy();
        
    }//GEN-LAST:event_jMenuItem_copiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Traductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Traductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Traductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Traductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Traductor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Procesar;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel_texto1;
    private javax.swing.JLabel jLabel_titulo2;
    private javax.swing.JMenuBar jMenuBar_1;
    private javax.swing.JMenuItem jMenuItem_Guardar;
    private javax.swing.JMenuItem jMenuItem_GuardarC;
    private javax.swing.JMenuItem jMenuItem_abrir;
    private javax.swing.JMenuItem jMenuItem_buscar;
    private javax.swing.JMenuItem jMenuItem_copiar;
    private javax.swing.JMenuItem jMenuItem_cortar;
    private javax.swing.JMenuItem jMenuItem_pegar;
    private javax.swing.JMenuItem jMenuItem_reemplazar;
    private javax.swing.JMenu jMenu_Archivo;
    private javax.swing.JMenu jMenu_Editar;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea_Ingreso;
    private javax.swing.JTextField jTextField_traductor;
    private javax.swing.JTextField lbl_Lcentral;
    private javax.swing.JTextField lbl_longitud;
    private javax.swing.JTextField lbl_palabraC;
    private javax.swing.JTextField lbl_palabrasImpar;
    private javax.swing.JTextField lbl_palabrasPar;
    private javax.swing.JTextField lbl_primeraL;
    private javax.swing.JTextField lbl_primeraP;
    private javax.swing.JTextField lbl_repeticionesA;
    private javax.swing.JTextField lbl_repeticionesE;
    private javax.swing.JTextField lbl_repeticionesI;
    private javax.swing.JTextField lbl_repeticionesO;
    private javax.swing.JTextField lbl_repeticionesU;
    private javax.swing.JTextField lbl_totalP;
    private javax.swing.JTextField lbl_ultimaL;
    private javax.swing.JTextField lbl_ultimaP;
    private javax.swing.JLabel txt_Lcentral;
    private javax.swing.JLabel txt_longitud;
    private javax.swing.JLabel txt_palabraC;
    private javax.swing.JLabel txt_palabrasImpar;
    private javax.swing.JLabel txt_palabrasPar;
    private javax.swing.JLabel txt_primeraL;
    private javax.swing.JLabel txt_primeraP;
    private javax.swing.JLabel txt_repeticionesA;
    private javax.swing.JLabel txt_repeticionesE;
    private javax.swing.JLabel txt_repeticionesI;
    private javax.swing.JLabel txt_repeticionesO;
    private javax.swing.JLabel txt_repeticionesU;
    private javax.swing.JLabel txt_totalP;
    private javax.swing.JLabel txt_traduccion;
    private javax.swing.JLabel txt_ultimaL;
    private javax.swing.JLabel txt_ultimaP;
    // End of variables declaration//GEN-END:variables
}
